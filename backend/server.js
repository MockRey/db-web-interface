require('dotenv').config();

const express = require('express');
const cors = require('cors');
const { Pool } = require('pg');

const app = express();
const port = process.env.PORT || 3000;

app.use(cors()); // –†–∞–∑—Ä–µ—à–∞–µ–º CORS –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
app.use(express.json()); // –ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–µ—Ä–≤–µ—Ä—É —Ä–∞–±–æ—Ç–∞—Ç—å —Å JSON-–∑–∞–ø—Ä–æ—Å–∞–º–∏

// –°–æ–∑–¥–∞–Ω–∏–µ –ø—É–ª–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ PostgreSQL
const pool = new Pool({
    host: process.env.DB_HOST,
    port: process.env.DB_PORT,
    user: process.env.DB_USER,
    password: process.env.DB_PASSWORD,
    database: process.env.DB_NAME
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
pool.connect()
    .then(() => console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ!'))
    .catch(err => console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', err));

console.log('Database Config:');
console.log('Host:', process.env.DB_HOST);
console.log('Port:', process.env.DB_PORT);
console.log('User:', process.env.DB_USER);
console.log('Database:', process.env.DB_NAME);

// –ë–∞–∑–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã API
app.get('/', (req, res) => {
    res.send('API —Ä–∞–±–æ—Ç–∞–µ—Ç! üöÄ');
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(port, () => {
    console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${port}`);
});

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞
app.post('/query', async (req, res) => {
    try {
        const { sql } = req.body; // –ü–æ–ª—É—á–∞–µ–º SQL-–∑–∞–ø—Ä–æ—Å –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
        if (!sql) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ SQL-–∑–∞–ø—Ä–æ—Å –Ω–µ –ø—É—Å—Ç–æ–π
            return res.status(400).json({ error: 'SQL-–∑–∞–ø—Ä–æ—Å –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—É—Å—Ç—ã–º' });
        }

        // –ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        const forbiddenCommands = ['DELETE', 'DROP', 'ALTER', 'TRUNCATE', 'UPDATE', 'INSERT'];
        const normalizedSQL = sql.trim().toUpperCase(); // –ü—Ä–∏–≤–æ–¥–∏–º –∫ –≤–µ—Ä—Ö–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –∑–∞–ø—Ä–æ—Å –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        if (forbiddenCommands.some(cmd => normalizedSQL.startsWith(cmd))) {
            return res.status(403).json({ error: '–ó–∞–ø—Ä–æ—Å —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É!' });
        }

        // –í—ã–ø–æ–ª–Ω—è–µ–º SQL-–∑–∞–ø—Ä–æ—Å –∏ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç 100 —Å—Ç—Ä–æ–∫–∞–º–∏
        const result = await pool.query(sql + ' LIMIT 100'); // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        if (result.rowCount === 0) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –∑–∞–ø—Ä–æ—Å–∞
            return res.status(404).json({ error: '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è' }); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º 404-—é –æ—à–∏–±–∫—É –∫–ª–∏–µ–Ω—Ç—É
        }

        res.json({ data: result.rows }); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON; –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é data –ø–æ–ø–∞–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ –∑–∞–ø—Ä–æ—Å—É –∫ –ë–î
    } catch (err) { // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–∞:', err); // –í—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å (–°–ï–†–í–ï–†–ê!!! - –±—Ä–∞—É–∑–µ—Ä –Ω–µ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç)
        res.status(500).json({ error: '–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞' }); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É –∫–ª–∏–µ–Ω—Ç—É
    }
});

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —à–∞–±–ª–æ–Ω–æ–≤ —Å –∑–∞–ø—Ä–æ—Å–∞–º–∏
app.get('/templates', async (req, res) => { // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è req –Ω–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è, –Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    try {
        const result = await pool.query('SELECT * FROM sql_templates'); // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —à–∞–±–ª–æ–Ω—ã –∏–∑ —Ç–∞–±–ª–∏—Ü—ã sql_templates

        res.json({ templates: result.rows }); // –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é templates –ø–æ–ø–∞–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ –∑–∞–ø—Ä–æ—Å—É –∫ –ë–î
    } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤:', err);
        res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤' });
    }
});

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞
app.post('/templates', async (req, res) => {
    const { name, sql } = req.body; // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ name –∏ sql –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞, –ø—Ä–∏—à–µ–¥—à–µ–≥–æ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
    if (!name || !sql) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±–∞ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
        return res.status(400).json({ error: '–ò–º—è —à–∞–±–ª–æ–Ω–∞ –∏ SQL-–∑–∞–ø—Ä–æ—Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!' });
    }

    try {
        await pool.query('INSERT INTO sql_templates (name, sql) VALUES ($1, $2) RETURNING *', [name, sql]); // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ –±–∞–∑—É –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
        res.status(201).json({ message: "–®–∞–±–ª–æ–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!" }); // 201 —Å—Ç–∞—Ç—É—Å –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Ä–µ—Å—É—Ä—Å –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω; –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –∫–ª–∏–µ–Ω—Ç—É
    } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞:', err);
        res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞' });
    }
});

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞
app.delete('/templates/:id', async (req, res) => {
    const { id } = req.params; // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é id –ø—Ä–∏—à–µ–¥—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ id —à–∞–±–ª–æ–Ω–∞

    try {
        const result = await pool.query("DELETE FROM sql_templates WHERE id = $1 RETURNING *", [id]); // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ –±–∞–∑—É –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º id
        if (result.rowCount === 0) { // –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ (—à–∞–±–ª–æ–Ω —É–¥–∞–ª—ë–Ω), –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª—ë–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫; –µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è rowCount –≤–µ—Ä–Ω—É–ª–∞ 0, —Ç–æ —à–∞–±–ª–æ–Ω –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω
            return res.status(404).json({ error: "–®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω" });
        }

        res.json({ message: "–®–∞–±–ª–æ–Ω —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω" }); // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –∫–ª–∏–µ–Ω—Ç—É
    } catch (err) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞:", err);
        res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
    }
});
